<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="online.superarilo.myblog.mapper.UsersDynamicsMapper">
    <resultMap id="dynamic" type="usersDynamicsVO">
        <id property="id" column="id"/>
        <result property="dynamicTitle" column="dynamic_title"/>
        <result property="dynamicDescribe" column="dynamic_describe"/>
        <result property="dynamicContent" column="dynamic_content"/>
        <result property="dynamicPageView" column="dynamic_page_view"/>
        <result property="commentNum" column="commentNum"/>
        <result property="isReporting" column="is_reporting"/>
        <result property="createTime" column="create_time"/>
        <result property="uid" column="uid"/>
        <result property="username" column="username"/>
        <result property="userHead" column="userHead"/>
        <result property="clazz" column="clazz"/>
        <collection property="tags" javaType="list" ofType="tags" column="id" select="listTagsByDynamicId">
            <id property="id" column="id"/>
            <result property="tagContent" column="tag_content"/>
            <result property="tagType" column="tag_type"/>
            <result property="createTime" column="create_time"/>
        </collection>
    </resultMap>

    <!-- 按条件查询动态信息 -->
    <select id="listUserDynamics" resultMap="dynamic">
        SELECT
            ud.id,
            ud.dynamic_title,
            ud.dynamic_describe,
            ud.dynamic_content,
            ud.dynamic_page_view,
            ud.is_reporting,
            ud.create_time,
            ui.uid AS uid,
            ui.username,
            ui.userhead as userHead,
            ui.class as clazz,
            COUNT(DISTINCT dc.id) AS commentNum,
            COUNT(DISTINCT c.id) AS collectionNum
        FROM users_dynamics AS ud
        INNER JOIN user_information AS ui ON ui.uid = ud.uid
        LEFT JOIN dynamic_comments AS dc ON dc.dynamic_id = ud.id AND dc.comment_parent_id = 0
        INNER JOIN dynamic_tags_relations AS dtr ON dtr.dynamic_id = ud.id
        INNER JOIN tags AS t ON t.id = dtr.tag_id
        left JOIN collections as c on c.dynamic_id = ud.id
        <where>
            ud.is_reporting = 0
            <if test="tagIds != null and tagIds.length > 0">
                and t.id in
                <foreach collection="tagIds" item="tagId" open="(" close=")" separator=",">
                    #{tagId}
                </foreach>
            </if>
        </where>
        GROUP BY ud.id
        ORDER BY
        <trim suffix=",">
            <choose>
                <!--            <when test="order != null and order == 'newest'">-->
                <!--                ud.create_time DESC,-->
                <!--            </when>-->
                <when test="order != null and order == 'hottest'">
                    collectionNum desc, commentNum desc, ud.dynamic_page_view desc
                </when>
                <when test="order != null and order.toUpperCase() == 'ASC'">
                    ud.create_time ASC
                </when>
                <!--            <when test="order != null and order.toUpperCase() == 'DESC'">-->
                <!--                ud.create_time DESC,-->
                <!--            </when>-->
            </choose>
        </trim>
        ud.create_time DESC, ud.id ASC
        LIMIT #{pageNumber}, #{pageSize}
    </select>

    <select id="dynamicListCount" resultType="long">
        SELECT
            count(distinct ud.id)
        FROM users_dynamics AS ud
        INNER JOIN user_information AS ui ON ui.uid = ud.uid
        LEFT JOIN dynamic_comments AS dc ON dc.dynamic_id = ud.id AND dc.comment_parent_id = 0
        INNER JOIN dynamic_tags_relations AS dtr ON dtr.dynamic_id = ud.id
        INNER JOIN tags AS t ON t.id = dtr.tag_id
        left JOIN collections as c on c.dynamic_id = ud.id
        <where>
            ud.is_reporting = 0
            <if test="tagIds != null and tagIds.length > 0">
                and t.id in
                <foreach collection="tagIds" item="tagId" open="(" close=")" separator=",">
                    #{tagId}
                </foreach>
            </if>
        </where>
        ORDER BY
        <trim suffix=",">
            <choose>
                <!--            <when test="order != null and order == 'newest'">-->
                <!--                ud.create_time DESC,-->
                <!--            </when>-->
                <when test="order != null and order == 'hottest'">
                    collectionNum desc, commentNum desc, ud.dynamic_page_view desc
                </when>
                <when test="order != null and order.toUpperCase() == 'ASC'">
                    ud.create_time ASC
                </when>
                <!--            <when test="order != null and order.toUpperCase() == 'DESC'">-->
                <!--                ud.create_time DESC,-->
                <!--            </when>-->
            </choose>
        </trim>
        ud.create_time DESC, ud.id ASC
    </select>

    <!-- 根据id查询动态 -->
    <select id="queryDynamicById" resultMap="dynamic">
        SELECT
            ud.id,
            ud.dynamic_title,
            ud.dynamic_describe,
            ud.dynamic_content,
            ud.dynamic_page_view,
            ud.is_reporting,
            ud.create_time,
            ui.uid AS uid,
            ui.username,
            ui.userhead as userHead,
            ui.class as clazz,
            COUNT(DISTINCT dc.id) AS commentNum,
            COUNT(DISTINCT c.id) AS collectionNum
        FROM users_dynamics AS ud
        INNER JOIN user_information AS ui ON ui.uid = ud.uid
        LEFT JOIN dynamic_comments AS dc ON dc.dynamic_id = ud.id AND dc.comment_parent_id = 0
        LEFT JOIN dynamic_tags_relations AS dtr ON dtr.dynamic_id = ud.id
        LEFT JOIN tags AS t ON t.id = dtr.tag_id
        LEFT JOIN collections as c on c.dynamic_id = ud.id
        where ud.id = #{dynamicId}
    </select>

    <!-- 根据动态id查询贴在这条动态上面的标签集合 -->
    <select id="listTagsByDynamicId" parameterType="long" resultType="tags">
        SELECT
            l.id,
            l.tag_content,
            l.tag_type,
            l.create_time
        FROM
            tags AS l
                INNER JOIN
            dynamic_tags_relations AS dlr ON dlr.tag_id = l.id
                INNER JOIN
            users_dynamics AS ud ON ud.id = dlr.dynamic_id
        WHERE
            ud.id = #{dynamicId}
        ORDER BY l.create_time DESC, l.id ASC
            LIMIT 3
    </select>
</mapper>
